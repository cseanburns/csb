#!/bin/bash

## Generates a RSS entry for the most recent daybook post for ../WWW/index.xml
## Date: 10/11/2020
## Sean Burns
## Usage: ./make-rss

## Part 1: Get values

# Create a date for the <lastBuildDate> xml element.
rss_date="$(date -R)"
echo "$rss_date" > tmp.xml

# Extract title value for the most recent daybook entry from the index.html file.
grep 'h2 id=' ../WWW/index.html | \
  head -n1 | \
  xmlstarlet sel -t -v '/h2' >> tmp.xml

# Work this out instead of using xmlstarlet above
# Right now it breaks something
#grep 'h2 id=' ../WWW/index.html | \
#    head -n1 | \
#    sed -e 's/<h2 id\=\"[a-z]*\-[a-z]*\">//' | \
#    sed -e 's/<\/h2>//' >> tmp.xml

echo -e "\n" >> tmp.xml

# Create a link using the baseurl and the <h2> element from index.html.
printf 'https://cseanburns.net/WWW/index.html#' >> tmp.xml
grep 'h2 id=' ../WWW/index.html | \
  head -n1 | \
  xmlstarlet sel -T -t -v '/h2/@id' >> tmp.xml

# Copy the date from <lastBuildDate> to a new line in order to create the <pubDate> XML element.
printf '1t4\nw\n' | \
  ed -s tmp.xml

# Delete a blank line. Need to investigate so that this isn't needed. 
printf '3d\nw\n' | \
  ed -s tmp.xml

# Copy link from above to use with the <guid> XML element
printf '3t4\nw\n' | \
  ed -s tmp.xml

## Part 2: Add all of the XML tags for all the values above

sed -i '1 s/^/<lastBuildDate>/' tmp.xml
sed -i '1 s/$/<\/lastBuildDate>/' tmp.xml

sed -i '2 s/^/<title>/' tmp.xml
sed -i '2 s/$/<\/title>/' tmp.xml

sed -i '3 s/^/<link>/' tmp.xml
sed -i '3 s/$/<\/link>/' tmp.xml

sed -i '4 s/^/<pubDate>/' tmp.xml
sed -i '4 s/$/<\/pubDate>/' tmp.xml

sed -i '5 s/^/<guid>/' tmp.xml
sed -i '5 s/$/<\/guid>/' tmp.xml

# Add the opening and closing <item> XML elements for the new entry block
ed -s tmp.xml << EOF
2i
<item>
.
6a
</item>
.
wq
EOF
