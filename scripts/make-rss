#!/usr/bin/bash

## Generates a RSS entry for the most post in ../WWW/index.html
## Date: 10/11/2020
## Sean Burns
## Usage: ./make-rss

## Part 1: Get values

# Create a date for the <lastBuildDate> xml element.
readonly rss_date="$(date -R)"
echo "${rss_date}" > tmp.xml

# Extract title value for the most recent attempts entry from the index.html file.
# The secong grep is a GNU trick for positive and negative look-ahead and
# look-back searching. See:
# https://stackoverflow.com/questions/13242469/how-to-use-sed-grep-to-extract-text-between-two-words
# A nice explanation for how lookahead and lookbehind work:
# https://fabianlee.org/2021/01/09/bash-grep-with-lookbehind-and-lookahead-to-isolate-desired-text/
grep 'h2 id=' ../WWW/index.html | \
  head -n1 | \
  grep -o -P '(?<=>).*(?=<)' >> tmp.xml

# Insert a temporary blank line
printf "\n" >> tmp.xml

# Create a link using the baseurl and the <h2> element from index.html.
printf "https://cseanburns.net/WWW/index.html#" >> tmp.xml
grep 'h2 id=' ../WWW/index.html | \
  head -n1 | \
  grep -o -P '(?<=").*(?=")' >> tmp.xml

# Copy the date to a new line in order to create <lastBuildDate> and
# <pubDate> lines.
printf '1t4\nw\n' | \
  ed -s tmp.xml

# Delete the blank line.
printf '3d\nw\n' | \
  ed -s tmp.xml

# Copy link from above to use with the <guid> XML element
printf '3t4\nw\n' | \
  ed -s tmp.xml
 
## Part 2: Add all of the XML tags for all the values above

sed -i '1 s/^/<lastBuildDate>/' tmp.xml
sed -i '1 s/$/<\/lastBuildDate>/' tmp.xml

sed -i '2 s/^/<title>/' tmp.xml
sed -i '2 s/$/<\/title>/' tmp.xml

sed -i '3 s/^/<link>/' tmp.xml
sed -i '3 s/$/<\/link>/' tmp.xml

sed -i '4 s/^/<pubDate>/' tmp.xml
sed -i '4 s/$/<\/pubDate>/' tmp.xml

sed -i '5 s/^/<guid>/' tmp.xml
sed -i '5 s/$/<\/guid>/' tmp.xml

# Add the opening and closing <item> XML elements for the new entry block
ed -s tmp.xml << EOF
2i
<item>
.
6a
</item>
.
wq
EOF
